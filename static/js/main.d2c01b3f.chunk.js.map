{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addToCart","good","setState","prevState","clearCart","formatTitleOfCart","length","slice","join","removeFromCart","selected","filter","this","renderedGood","map","isGoodSelected","includes","buttonEvents","changeButtonTitle","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACEC,MAAe,CACbC,aAAc,CAAC,QAFnB,EAKEC,UAAY,SAACC,GACX,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,aAAa,GAAD,mBAAMI,EAAUJ,cAAhB,CAA8BE,SAPhD,EAWEG,UAAY,WACV,EAAKF,SACH,CAAEH,aAAc,MAbtB,EAiBEM,kBAAoB,WAClB,IAAQN,EAAiB,EAAKD,MAAtBC,aAER,OAAQA,EAAaO,QACnB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUP,EAAV,gBACF,QACE,MAAM,GAAN,OAAUA,EAAaQ,MAAM,GAAI,GAC9BC,KAAK,MADR,gBACqBT,EAClBQ,OAAO,GAFV,kBA1BR,EAgCEE,eAAiB,SAACC,GAChB,IAAQX,EAAiB,EAAKD,MAAtBC,aAER,EAAKG,SAAS,CACZH,aAAcA,EAAaY,QACzB,SAAAV,GAAI,OAAIA,IAASS,QArCzB,4CA0CE,WAAU,IAAD,OACCX,EAAiBa,KAAKd,MAAtBC,aACFc,EAAejB,EAAgBkB,KAAI,SAACb,GACxC,IAAMc,EAAiBhB,EAAaiB,SAASf,GACvCgB,EAAeF,EACjB,kBAAM,EAAKN,eAAeR,IAC1B,kBAAM,EAAKD,UAAUC,IACnBiB,EAAoBH,EACtB,SACA,MAEJ,OACE,qBAEEI,UAAS,qBAAgBpB,EAAaiB,SAASf,GAC3C,SACA,IAJN,UAMGA,EACD,wBACEmB,KAAK,SACLD,UAAU,YACVE,QAASJ,EAHX,SAKGC,MAXEjB,MAiBX,OACE,sBAAKkB,UAAU,MAAf,UACE,6BACGP,KAAKP,sBAER,oBAAIc,UAAU,aAAd,SACGN,IAEDd,EAAaO,OAAS,GACtB,wBACEc,KAAK,SACLD,UAAU,cACVE,QAAST,KAAKR,UAHhB,+BAjFV,GAAyBkB,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d2c01b3f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ninterface State {\n  selectedGood: string[],\n}\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  addToCart = (good:string) => {\n    this.setState((prevState) => ({\n      selectedGood: [...prevState.selectedGood, good],\n    }));\n  };\n\n  clearCart = () => {\n    this.setState(\n      { selectedGood: [] },\n    );\n  };\n\n  formatTitleOfCart = () => {\n    const { selectedGood } = this.state;\n\n    switch (selectedGood.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGood} is selected`;\n      default:\n        return `${selectedGood.slice(0, -1)\n          .join(', ')} and ${selectedGood\n          .slice(-1)} is selected`;\n    }\n  };\n\n  removeFromCart = (selected: string) => {\n    const { selectedGood } = this.state;\n\n    this.setState({\n      selectedGood: selectedGood.filter(\n        good => good !== selected,\n      ),\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const renderedGood = goodsFromServer.map((good) => {\n      const isGoodSelected = selectedGood.includes(good);\n      const buttonEvents = isGoodSelected\n        ? () => this.removeFromCart(good)\n        : () => this.addToCart(good);\n      const changeButtonTitle = isGoodSelected\n        ? 'remove'\n        : 'add';\n\n      return (\n        <li\n          key={good}\n          className={`good__item ${selectedGood.includes(good)\n            ? 'active'\n            : ''}`}\n        >\n          {good}\n          <button\n            type=\"button\"\n            className=\"good__add\"\n            onClick={buttonEvents}\n          >\n            {changeButtonTitle}\n          </button>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.formatTitleOfCart()}\n        </h1>\n        <ul className=\"good__list\">\n          {renderedGood}\n        </ul>\n        {(selectedGood.length > 0) && (\n          <button\n            type=\"button\"\n            className=\"good__clear\"\n            onClick={this.clearCart}\n          >\n            Clear cart\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}