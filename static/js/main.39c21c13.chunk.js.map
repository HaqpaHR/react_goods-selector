{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectGood","good","setState","previousState","clearCart","goodsInCart","length","slice","join","this","listOfGoods","map","className","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACEC,MAAe,CACbC,aAAc,CAAC,QAFnB,EAKEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GACb,MAAO,CACLJ,aAAa,GAAD,mBAAMI,EAAcJ,cAApB,CAAkCE,SARtD,EAaEG,UAAY,WACV,EAAKF,SACH,CAAEH,aAAc,MAftB,EAmBEM,YAAc,WACZ,IAAQN,EAAiB,EAAKD,MAAtBC,aAER,OACGA,EAAaO,OAAS,EAAvB,UACOP,EAAaQ,MAAM,GAAI,GAAGC,KAAK,MADtC,gBACmDT,EAAaQ,OAAO,GADvE,2BAEOR,EAFP,iBAvBN,4CA6BE,WAAU,IAAD,OACCA,EAAiBU,KAAKX,MAAtBC,aACFW,EAAcd,EAAgBe,KAAI,SAACV,GAAD,OACtC,qBAEEW,UAAS,qBAAgBb,EAAac,SAASZ,GAAQ,eAAiB,IAF1E,UAIGA,EAECF,EAAac,SAASZ,GACpB,KAEA,wBACEa,KAAK,SACLF,UAAU,YACVG,QAAS,WACP,EAAKf,WAAWC,IAJpB,2BARCA,MAqBT,OACE,sBAAKW,UAAU,MAAf,UACE,uCAAiC,IAAxBb,EAAaO,OAAe,oBAAsBG,KAAKJ,iBAChE,oBAAIO,UAAU,aAAd,SACGF,IAEDX,EAAaO,OAAS,EAEpB,wBACEQ,KAAK,SACLF,UAAU,cACVG,QAAS,WACP,EAAKX,aAJT,wBAUA,YAxEZ,GAAyBY,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.39c21c13.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ninterface State {\n  selectedGood: string[],\n}\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  selectGood = (good: string) => {\n    this.setState((previousState) => {\n      return {\n        selectedGood: [...previousState.selectedGood, good],\n      };\n    });\n  };\n\n  clearCart = () => {\n    this.setState(\n      { selectedGood: [] },\n    );\n  };\n\n  goodsInCart = () => {\n    const { selectedGood } = this.state;\n\n    return (\n      (selectedGood.length > 1)\n        ? `${selectedGood.slice(0, -1).join(', ')} and ${selectedGood.slice(-1)} are selected`\n        : `${selectedGood} is selected`\n    );\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const listOfGoods = goodsFromServer.map((good) => (\n      <li\n        key={good}\n        className={`good__item ${selectedGood.includes(good) ? 'good--active' : ''}`}\n      >\n        {good}\n\n        { selectedGood.includes(good)\n          ? null\n          : (\n            <button\n              type=\"button\"\n              className=\"good__add\"\n              onClick={() => {\n                this.selectGood(good);\n              }}\n            >\n              Add in Cart\n            </button>\n          )}\n      </li>\n    ));\n\n    return (\n      <div className=\"App\">\n        <h1>{ `${selectedGood.length === 0 ? 'No goods selected' : this.goodsInCart()}` }</h1>\n        <ul className=\"good__list\">\n          {listOfGoods}\n        </ul>\n        {(selectedGood.length > 0)\n          ? (\n            <button\n              type=\"button\"\n              className=\"good__clear\"\n              onClick={() => {\n                this.clearCart();\n              }}\n            >\n              Clear cart\n            </button>\n          )\n          : null}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}